`` - обратные кавычки можно переносить без зазрений совести

\uXXXX -символы с 16ричным юникодом

str[pos] - доступ к символу как в массиве есть еще метод charAT() - разница, что метод вернет 
пустую строку, а скобки undefined

for of - цикл для перебора строк

.toUpperCase();
.toLowerCase(); - поменять регистр в строке

str.indexOf(substr, pos) - поиск подстроки substr с позиции pos. 2 аргумент не обязателен. Вернет либо номер начала подстроки, либо -1


str.lastIndexOf(substr, position) - поиск последнего вхождения

sub.includes(substr, pos) - возвращает true, если в строке str есть подстрока substr, либо false, если нет

str.startsWith() str.startsEndWith() - проверяют начинается или заканчивается строка с заданной подстроки

str.slice(start [,end]) - получение подстроки.Возвращает часть строки от start до (не включая) end. можно использовать отрицательные значения

str.substr(start [, length]) - возвращает часть строки от start длины length.

str.codePointAt(pos) - возвращает код для символа, находящегося на позиции pos:

String.fromCodePoint(code) - создает символ по его коду

str.localCompare(str2) - сравнивает 2 строки и дат результат сравнения: -1 str<str2; 1 str>str2
0 str=str